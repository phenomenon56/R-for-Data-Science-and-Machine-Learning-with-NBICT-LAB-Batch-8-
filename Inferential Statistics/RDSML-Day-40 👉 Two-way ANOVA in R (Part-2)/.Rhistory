install.packages("nycflights13")
attach(nycflights13::flights)
head(nycflights13::flights)
library(psych)
?describe
install.packages("mgcv", lib = "C:/Users/Irfan/Documents/R/win-library/4.5")
install.packages("mgcv", lib = "C:/Users/Irfan/Documents/R/win-library/4.5")
dir.create("C:/Users/Irfan/Desktop/Rlibs", showWarnings = FALSE)
.libPaths("C:/Users/Irfan/Desktop/Rlibs")
install.packages("mgcv")
library(mgcv)
install.packages("BiocManager")
library(BiocManager)
BiocManager::install("ggtree")
install.packages("lattice")
library(ape)
tree = read.tree("C:/Users/Irfan/Downloads/example_tree.nwk")
tree
library(BiocManager)
tree = read.tree("C:\Users\Irfan\Downloads")
tree = read.tree("C:\\Users\\Irfan\\Downloads\\labeled_example_tree.nwk")
tree
meta = read.csv("C:\\Users\\Irfan\\Downloads\\phylogeny_data.csv", header = TRUE)
head(meta)
plot(tree)
tree = midpoint(tree)
install.packages("phangorn")
library(phangorn)
tree = midpoint(tree)
plot(tree)
library(ggtree)
dir.create("C:/Users/Irfan/Desktop/Rlibs", showWarnings = FALSE)
.libPaths("C:/Users/Irfan/Desktop/Rlibs")
install.packages("mgcv")
tree = midpoint(tree)
dir.create("C:/Users/Irfan/Desktop/Rlibs", showWarnings = FALSE)
.libPaths("C:/Users/Irfan/Desktop/Rlibs")
#install.packages("mgcv")
library(mgcv)
#install.packages("BiocManager")
library(BiocManager)
BiocManager::install("ggtree")
tree = read.tree("C:\\Users\\Irfan\\Downloads\\labeled_example_tree.nwk")
tree
meta = read.csv("C:\\Users\\Irfan\\Downloads\\phylogeny_data.csv", header = TRUE)
head(meta)
plot(tree)
install.packages("phangorn")
install.packages("phangorn")
library(phangorn)
tree = midpoint(tree)
plot(tree)
t1 = ggtree(tree) %<+% meta
t1
library(ggplot2)
library(ggtree)
ggtree(tree) %<+% meta +
geom_tippoint()
BiocManager::install("treeio")
library(treeio)
library(treeio)
install.packages("viridis")
install.packages("ggnewscale")
ggtree(tree) %<+% meta +
geom_tippoint(aes(color = Host))
ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))
tree = midpoint(tree)
ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))
#install.packages("viridis")
#install.packages("ggnewscale")
head(meta)
meta.water = meta[1, 'Host']
meta.water
meta.water = as.data.frame (meta[1, 'Host'])
meta.water
row.names(meta.water)
colnames(meta.water)
head(meta)
meta$Strain_Name
rownames(meta.water)= meta$Strain_Name
colnames(meta.water) = 'Water'
gheatmap(t1, meta.water)
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.005))
t1
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.001))
t1
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.008))
t1
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.1))
t1
runif(10)
# Generating  10000 numbers of uniform distribution
r=runif(10000)
hist(r)
meanr=mean(r)
sdr=sd(r)
# Draw three random samples from the distribution
samples1=sample(r,4)
samples1
samples2=sample(r,4)
samples2
samples3=sample(r,4)
samples3
mean(samples1)
mean(samples2)
mean(samples3)
cl4
# Run a For loop in R
cl4=mean(sample(r,4))
cl4
for (i in 1:1000) {
cl4=c(cl4=mean(sample(r,4)))
}
cl4
hist(cl4)
for (i in 1:1000){
cl4=c(cl4=mean(sample(r,4)))
}
cl4
for (i in 1:1000){
cl100 <- c(cl100, mean(sample(r,100)))
}
cl100
cl100=mean(sample(r,100))
cl100
for (i in 1:1000){
cl100 <- c(cl100, mean(sample(r,100)))
}
hist(cl100)
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
library(broom)
library(car)
detach("package:carData", unload = TRUE)
library(effectsize)
library(performance)
# installing Packages
#install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
install.packages("emmeans")
library(emmeans)
# installing Packages
#install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
#install.packages("emmeans")
install.packages("kableExtra")
library(kableExtra)
d <- read.csv("cropdata.csv")
library(tidyverse)
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(tidyverse)
# installing Packages
#install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
#install.packages("emmeans")
#install.packages("kableExtra")
library(tidyverse)
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(tidyverse)
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(tidyverse)
d <- read.csv("cropdata.csv")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(dplyr)
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
View(summs)
# Quick Data Summary Visualization
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))
ggplot(summs, aes(irr, mean, group = fert))+
geom_line()
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point()
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield")
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation")
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-40 ðŸ‘‰ Two-way ANOVA in R (Part-2)")
library(tidyverse)
library(dplyr)
library(dplyr)
d <- read.csv("cropdata.csv")
d <- read.csv("cropdata.csv")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
m <- aov(y ~ fert + irr + fert*irr, data = d)
summary(m)
summary(m)
# Assumptions Visual checks
plot(m)
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
# Shapiro-Wilk on Residuals (Normality)
residuals(m)
res <- residuals(m)
shapiro.test(res)
# Levene's test for equal variances
library(car)
leveneTest(y ~ fert*irr, data =d, center = median)
# Postâ€‘hoc & simpleâ€‘effects with emmeans/
# Interaction contrasts(simple effects): effect of fert at each level of irr
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
