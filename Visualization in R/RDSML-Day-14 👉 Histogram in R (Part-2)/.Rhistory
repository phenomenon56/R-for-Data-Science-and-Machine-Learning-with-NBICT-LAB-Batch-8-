install.packages("nycflights13")
attach(nycflights13::flights)
head(nycflights13::flights)
library(psych)
?describe
install.packages("mgcv", lib = "C:/Users/Irfan/Documents/R/win-library/4.5")
install.packages("mgcv", lib = "C:/Users/Irfan/Documents/R/win-library/4.5")
dir.create("C:/Users/Irfan/Desktop/Rlibs", showWarnings = FALSE)
.libPaths("C:/Users/Irfan/Desktop/Rlibs")
install.packages("mgcv")
library(mgcv)
install.packages("BiocManager")
library(BiocManager)
BiocManager::install("ggtree")
install.packages("lattice")
library(ape)
tree = read.tree("C:/Users/Irfan/Downloads/example_tree.nwk")
tree
library(BiocManager)
tree = read.tree("C:\Users\Irfan\Downloads")
tree = read.tree("C:\\Users\\Irfan\\Downloads\\labeled_example_tree.nwk")
tree
meta = read.csv("C:\\Users\\Irfan\\Downloads\\phylogeny_data.csv", header = TRUE)
head(meta)
plot(tree)
tree = midpoint(tree)
install.packages("phangorn")
library(phangorn)
tree = midpoint(tree)
plot(tree)
library(ggtree)
dir.create("C:/Users/Irfan/Desktop/Rlibs", showWarnings = FALSE)
.libPaths("C:/Users/Irfan/Desktop/Rlibs")
install.packages("mgcv")
tree = midpoint(tree)
dir.create("C:/Users/Irfan/Desktop/Rlibs", showWarnings = FALSE)
.libPaths("C:/Users/Irfan/Desktop/Rlibs")
#install.packages("mgcv")
library(mgcv)
#install.packages("BiocManager")
library(BiocManager)
BiocManager::install("ggtree")
tree = read.tree("C:\\Users\\Irfan\\Downloads\\labeled_example_tree.nwk")
tree
meta = read.csv("C:\\Users\\Irfan\\Downloads\\phylogeny_data.csv", header = TRUE)
head(meta)
plot(tree)
install.packages("phangorn")
install.packages("phangorn")
library(phangorn)
tree = midpoint(tree)
plot(tree)
t1 = ggtree(tree) %<+% meta
t1
library(ggplot2)
library(ggtree)
ggtree(tree) %<+% meta +
geom_tippoint()
BiocManager::install("treeio")
library(treeio)
library(treeio)
install.packages("viridis")
install.packages("ggnewscale")
ggtree(tree) %<+% meta +
geom_tippoint(aes(color = Host))
ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))
tree = midpoint(tree)
ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))
#install.packages("viridis")
#install.packages("ggnewscale")
head(meta)
meta.water = meta[1, 'Host']
meta.water
meta.water = as.data.frame (meta[1, 'Host'])
meta.water
row.names(meta.water)
colnames(meta.water)
head(meta)
meta$Strain_Name
rownames(meta.water)= meta$Strain_Name
colnames(meta.water) = 'Water'
gheatmap(t1, meta.water)
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.005))
t1
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.001))
t1
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.008))
t1
t1= ggtree(tree, layout = 'circular') %<+% meta +
geom_tippoint(aes(color = Host))+
geom_tiplab(aes(x= x+0.1))
t1
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-14 ðŸ‘‰ Histogram in R (Part-2)")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the library
library(ggplot2)
dataset = read.csv("data.csv")
library(ggplot2)
View(dataset)
# Creating the Basic Histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram()
# Creating the Basic Histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = 'white')
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white')
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = "identity")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = "identity")
# we can change the position adjustment
# to use for overlapping points on the layer
# possible values for the argument position are
# "identity", "stack", "dodged", Default value is "stack"
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = "dodge")
# we can change the position adjustment
# to use for overlapping points on the layer
# possible values for the argument position are
# "identity", "stack", "dodge", Default value is "stack"
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = "dodge") +
theme(legend.position = "top")
# Adding mean lines
# The plyr package is used to calculate the mean weight of each group
install.packages("plyr")
library(plyr)
detach("package:plyr", unload = TRUE)
# Adding mean lines
# The plyr package is used to calculate the mean weight of each group
# install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
theme(legend.position = "top")
myPlot
myPlot
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex), linetype = "dashed") +
theme(legend.position = "top")
myPlot
myPlot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
myPlot + scale_color_brewer(palette =  "Dark2") +
scale_fill_brewer(palette =  "Dark2")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex), linetype = "dashed") +
theme(legend.position = "top")
myPlot
myPlot + scale_color_brewer(palette =  "Dark2") +
scale_fill_brewer(palette =  "Dark2")
myPlot + scale_color_grey() + scale_fill_grey()
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
