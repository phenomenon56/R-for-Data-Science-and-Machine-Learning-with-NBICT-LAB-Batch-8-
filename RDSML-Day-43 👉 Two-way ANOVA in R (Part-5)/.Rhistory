geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-40 👉 Two-way ANOVA in R (Part-2)")
library(tidyverse)
library(dplyr)
library(dplyr)
d <- read.csv("cropdata.csv")
d <- read.csv("cropdata.csv")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
m <- aov(y ~ fert + irr + fert*irr, data = d)
summary(m)
summary(m)
# Assumptions Visual checks
plot(m)
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
# Shapiro-Wilk on Residuals (Normality)
residuals(m)
res <- residuals(m)
shapiro.test(res)
# Levene's test for equal variances
library(car)
leveneTest(y ~ fert*irr, data =d, center = median)
# Post‑hoc & simple‑effects with emmeans/
# Interaction contrasts(simple effects): effect of fert at each level of irr
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-41 👉 Two-way ANOVA in R (Part-3)")
library(tidyverse)
library(dplyr)
library(dplyr)
library(dplyr)
d <- read.csv("cropdata.csv")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
m <- aov(y ~ fert + irr + fert*irr, data = d)
summary(m)
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
res <- residuals(m)
shapiro.test(res)
res <- residuals(m)
shapiro.test(res)
library(car)
leveneTest(y ~ fert*irr, data =d, center = median)
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
contrast(emmeans(m, ~fert), method = "tukey")
contrast(emmeans(m, ~fert), method = "tukey")
contrast(emmeans(m, ~fert), method = "tukey")
contrast(emmeans(m, ~irr), method = "tukey")
# CLD (Compact Letter Display) Letters
library(multcomp)
install.packages("multcomp")
install.packages("multcompview")
library(multcomp)
install.packages("multcomp")
library(multcomp)
library(multcomp)
detach("package:multcomp", unload = TRUE)
library(multcomp)
detach("package:multcomp", unload = TRUE)
library(multcompview)
install.packages("multcompview")
install.packages("multcompView")
library(multcompview)
library(multcompview)
library(multcompView)
library(multcomp)
group_letters <- cld(emmeans(m, ~fert*irr), Letters = letters)
library(multcomp)
install.packages("TH.data")
library(multcomp)
library(multcomp)
install.packages("TH.data", repos = "https://cran.rstudio.com/")
install.packages("multcomp")
library(multcomp)
library(multcompView)
group_letters <- cld(emmeans(m, ~fert*irr), Letters = letters)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = LETTERS)
library(emmeans)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = LETTERS)
library(emmeans)
library(multcomp)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = LETTERS)
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-41 👉 Two-way ANOVA in R (Part-3)")
library(tidyverse)
library(dplyr)
library(dplyr)
d <- read.csv("cropdata.csv")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
m <- aov(y ~ fert + irr + fert*irr, data = d)
summary(m)
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
res <- residuals(m)
shapiro.test(res)
library(car)
leveneTest(y ~ fert*irr, data =d, center = median)
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
contrast(emmeans(m, ~fert), method = "tukey")
contrast(emmeans(m, ~irr), method = "tukey")
library(multcomp)
library(multcompView)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = letters)
print(group_letters)
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-42 👉 Two-way ANOVA in R (Part-4)")
# installing Packages
#install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
#install.packages("emmeans")
#install.packages("kableExtra")
library(tidyverse)
library(dplyr)
d <- read.csv("cropdata.csv")
# Quick Exploratory Descriptive Analysis
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
# Quick Data Summary Visualization
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.2) +
facet_wrap(~fert, nrow = 1) +
labs(x = "Irrigation", y = "Mean yield",
title = "Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
# Fit the Model/Interaction between two variables
m <- aov(y ~ fert + irr + fert*irr, data = d)
summary(m)
# Assumptions Visual checks
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
res <- residuals(m)
shapiro.test(res)
# Levene's test for equal variances
library(car)
leveneTest(y ~ fert*irr, data =d, center = median)
# Post‑hoc & simple‑effects with emmeans/
# Interaction contrasts(simple effects): effect of fert at each level of irr
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
# Post‑hoc & simple‑effects with emmeans/
# Interaction contrasts(simple effects): effect of irr at each level of fert
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
# Main‑effect comparisons (only if interaction is negligible/
# considering 1 variable constant (e.g-irrigation here)
contrast(emmeans(m, ~fert), method = "tukey")
# Main‑effect comparisons (only if interaction is negligible/
# considering 1 variable constant (e.g- fertilization here)
contrast(emmeans(m, ~irr), method = "tukey")
# CLD (Compact Letter Display) Letters
library
# install.packages("TH.data", repos = "https://cran.rstudio.com/")
# install.packages("multcomp")
# install.packages("multcompView")
library(multcomp)
library(multcompView)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = letters)
print(group_letters)
library(broom)
library(kableExtra)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
print(aov_tab)
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
install.packages(c( "performance","broom.helpers","patchwork"))
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
install.packages("performance")
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
# install.packages(c( "performance","broom.helpers","patchwork"))
# install.packages("performance")
install.packages("effectsize")
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
install.packages("tidyr")
install.packages("tidyr")
# install.packages(c( "performance","broom.helpers","patchwork"))
# install.packages("performance")
# install.packages("effectsize")
# install.packages("tidyr")
library(tidyr)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means ± 95% CI by Fertilizer × Irrigation", x="Irrigation", y="Mean yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means ± 95% CI by Fertilizer × Irrigation", x="Irrigation", y="Mean yield")
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- aov(y ~ fert * irr, data = d)
m <- aov(y ~ fert * irr, data = d)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
lev <- car::leveneTest(y ~ fert*irr, data = d, center = median)
cat("\nLevene test (median-based) for homogeneity of variance:\n"); print(lev)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
Would you like to install it? [y/n] y
Would you like to install it? [y/n]y
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-43 👉 Two-way ANOVA in R (Part-5)")
setwd("C:/Users/Irfan/OneDrive/Practice_R/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8-/RDSML-Day-43 👉 Two-way ANOVA in R (Part-5)")
library(tidyverse)
library(dplyr)
d <- read.csv("cropdata.csv")
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
library(tidyverse)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
library(tidyr)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means ± 95% CI by Fertilizer × Irrigation", x="Irrigation", y="Mean yield")
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- aov(y ~ fert * irr, data = d)
summary(m)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
lev <- car::leveneTest(y ~ fert*irr, data = d, center = median)
cat("\nLevene test (median-based) for homogeneity of variance:\n"); print(lev)
# Comprehensive diagnostics (performance)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))  # plots/flags common issues
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
y
formula(m)
names(d)
vif(m)
car::vif(m, type = "predictor")
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
performance::check_model(m)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))  # plots/flags common issues
cat("\n📊 Cell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\n📈 Group means (preview):\n")
print(
d %>%
group_by(fert, irr) %>%
summarise(n = n(), mean = mean(y), sd = sd(y), .groups = "drop")
)
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n    = n(),
mean = mean(y),
sd   = sd(y),
se   = sd / sqrt(n),
ci   = qt(.975, df = n - 1) * se,   # 95% CI
.groups = "drop"
)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means ± 95% CI by Fertilizer × Irrigation", x="Irrigation", y="Mean yield")
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- lm(y ~ fert * irr, data = d)
summary(m)
aov_tab <- car::Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
# Publication-style table
kbl(aov_tab, digits = 3, caption = "Two-Way ANOVA (Type III)") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
par(mfrow = c(2, 2))
plot(m)
par(mfrow = c(1, 1))
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\n🧠 Shapiro–Wilk p =", signif(shapiro_p, 3), "→ Normality of residuals\n")
lev <- car::leveneTest(y ~ fert * irr, data = d, center = median)
cat("\n⚖️ Levene’s Test for Homogeneity of Variance:\n")
print(lev)
cat("\n🔍 Variance Inflation Factors (VIF):\n")
print(car::vif(m, type = "predictor"))
cat("\n📉 performance::check_model(m):\n")
performance::check_model(m)
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
d <- read.csv("cropdata.csv")
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
library(tidyr)
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
## ── 1) Import & basic hygiene ----
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
# Coerce types safely
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
